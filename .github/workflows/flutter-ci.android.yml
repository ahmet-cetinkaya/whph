name: Flutter CI - Android

on:
  workflow_dispatch: # This is a trigger for manual workflow run
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    # Install dependencies
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    # Build for Android
    - name: Install Flutter dependencies
      run: flutter pub get

    - name: Modify app_usage build.gradle
      run: |
        PUB_CACHE="${HOME}/.pub-cache"
        APP_USAGE_PATH="${PUB_CACHE}/hosted/pub.dev/app_usage-3.0.1/android/build.gradle"
        if [ -f "$APP_USAGE_PATH" ]; then
          sed -i 's/^    compileSdkVersion .*$/    compileSdkVersion 33/' "$APP_USAGE_PATH"
          sed -i '/^android {/a \ \ namespace "dk.cachet.app_usage"' "$APP_USAGE_PATH"
          sed -i '/^android {/a \ \ compileOptions { sourceCompatibility = JavaVersion.VERSION_17; targetCompatibility = JavaVersion.VERSION_17; }' "$APP_USAGE_PATH"
          sed -i '/^android {/a \ \ kotlinOptions { jvmTarget = "17" }' "$APP_USAGE_PATH"
        else
          echo "build.gradle not found. Please check the package path."
          exit 1
        fi

    - name: Build for Android
      run: flutter build apk --release
    
    # Publish the build artifacts
    - name: Get application version
      id: app_version
      run: |
        APP_VERSION=$(awk '/^version:/ {print $2}' pubspec.yaml)
        echo "APP_VERSION=${APP_VERSION}" >> $GITHUB_ENV

    - name: Upload Android build artifact
      uses: actions/upload-artifact@v4
      with:
        name: whph-v${{ env.APP_VERSION }}-android
        path: build/app/outputs/flutter-apk/app-release.apk
