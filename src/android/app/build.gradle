plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "me.ahmetcetinkaya.whph"

    compileSdk 35

    ndkVersion = "27.0.12077973"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    defaultConfig {
        applicationId = "me.ahmetcetinkaya.whph"
        minSdk = 22
        targetSdk = 35
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        manifestPlaceholders += [
            'ENABLE_IMPELLER': 'true'
        ]
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86_64'
        }
    }

    dependenciesInfo {
        // Disables dependency metadata when building APKs.
        includeInApk = false
        // Disables dependency metadata when building Android App Bundles.
        includeInBundle = false
    }

    signingConfigs {
        release {
            if (keystoreProperties['keyAlias']) {
                keyAlias keystoreProperties['keyAlias']
            }
            if (keystoreProperties['keyPassword']) {
                keyPassword keystoreProperties['keyPassword']
            }
            if (keystoreProperties['storeFile']) {
                storeFile file(keystoreProperties['storeFile'])
            }
            if (keystoreProperties['storePassword']) {
                storePassword keystoreProperties['storePassword']
            }

            // Add validation for signing configuration
            def storeFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            if (!storeFile || !storeFile.exists()) {
                println("WARNING: Keystore file not found: ${keystoreProperties['storeFile']}")
            } else {
                println("Keystore file found: ${storeFile.absolutePath}")
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.work:work-runtime-ktx:2.9.0'
    implementation 'androidx.glance:glance-appwidget:1.0.0'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'
}

flutter {
    source = "../.."
}
