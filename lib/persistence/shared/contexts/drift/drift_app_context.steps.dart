// dart format width=80
import 'package:drift/internal/versioned_schema.dart' as i0;
import 'package:drift/drift.dart' as i1;
import 'package:drift/drift.dart'; // ignore_for_file: type=lint,unused_import

// GENERATED BY drift_dev, DO NOT MODIFY.
final class Schema2 extends i0.VersionedSchema {
  Schema2({required super.database}) : super(version: 2);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    appUsageTable,
    appUsageTagTable,
    habitTable,
    habitTagTable,
    habitRecordTable,
    taskTable,
    taskTagTable,
    tagTable,
    tagTagTable,
    settingTable,
    syncDeviceTable,
  ];
  late final Shape0 appUsageTable = Shape0(
      source: i0.VersionedTable(
        entityName: 'app_usage_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 appUsageTagTable = Shape1(
      source: i0.VersionedTable(
        entityName: 'app_usage_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_8,
          _column_9,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 habitTable = Shape2(
      source: i0.VersionedTable(
        entityName: 'habit_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_10,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 habitTagTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'habit_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_9,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 habitRecordTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'habit_record_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_12,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 taskTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'task_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_13,
          _column_14,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 taskTagTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'task_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_21,
          _column_9,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 tagTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_6,
          _column_22,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 tagTagTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'tag_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_23,
          _column_24,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 settingTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'setting_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_25,
          _column_26,
          _column_27,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape10 syncDeviceTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'sync_device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape0 extends i0.VersionedTable {
  Shape0({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id => columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdDate => columnsByName['created_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get modifiedDate => columnsByName['modified_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get deletedDate => columnsByName['deleted_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get name => columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get displayName => columnsByName['display_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get color => columnsByName['color']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get duration => columnsByName['duration']! as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<String> _column_0(String aliasedName) =>
    i1.GeneratedColumn<String>('id', aliasedName, false, type: i1.DriftSqlType.string);
i1.GeneratedColumn<DateTime> _column_1(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('created_date', aliasedName, false, type: i1.DriftSqlType.dateTime);
i1.GeneratedColumn<DateTime> _column_2(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('modified_date', aliasedName, true, type: i1.DriftSqlType.dateTime);
i1.GeneratedColumn<DateTime> _column_3(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('deleted_date', aliasedName, true, type: i1.DriftSqlType.dateTime);
i1.GeneratedColumn<String> _column_4(String aliasedName) =>
    i1.GeneratedColumn<String>('name', aliasedName, false, type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_5(String aliasedName) =>
    i1.GeneratedColumn<String>('display_name', aliasedName, true, type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_6(String aliasedName) =>
    i1.GeneratedColumn<String>('color', aliasedName, true, type: i1.DriftSqlType.string);
i1.GeneratedColumn<int> _column_7(String aliasedName) =>
    i1.GeneratedColumn<int>('duration', aliasedName, false, type: i1.DriftSqlType.int);

class Shape1 extends i0.VersionedTable {
  Shape1({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id => columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdDate => columnsByName['created_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get modifiedDate => columnsByName['modified_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get deletedDate => columnsByName['deleted_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get appUsageId => columnsByName['app_usage_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get tagId => columnsByName['tag_id']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_8(String aliasedName) =>
    i1.GeneratedColumn<String>('app_usage_id', aliasedName, false, type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_9(String aliasedName) =>
    i1.GeneratedColumn<String>('tag_id', aliasedName, false, type: i1.DriftSqlType.string);

class Shape2 extends i0.VersionedTable {
  Shape2({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id => columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdDate => columnsByName['created_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get modifiedDate => columnsByName['modified_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get deletedDate => columnsByName['deleted_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get name => columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get description => columnsByName['description']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_10(String aliasedName) =>
    i1.GeneratedColumn<String>('description', aliasedName, false, type: i1.DriftSqlType.string);

class Shape3 extends i0.VersionedTable {
  Shape3({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id => columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdDate => columnsByName['created_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get modifiedDate => columnsByName['modified_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get deletedDate => columnsByName['deleted_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get habitId => columnsByName['habit_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get tagId => columnsByName['tag_id']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_11(String aliasedName) =>
    i1.GeneratedColumn<String>('habit_id', aliasedName, false, type: i1.DriftSqlType.string);

class Shape4 extends i0.VersionedTable {
  Shape4({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id => columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdDate => columnsByName['created_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get modifiedDate => columnsByName['modified_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get deletedDate => columnsByName['deleted_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get habitId => columnsByName['habit_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get date => columnsByName['date']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<DateTime> _column_12(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('date', aliasedName, false, type: i1.DriftSqlType.dateTime);

class Shape5 extends i0.VersionedTable {
  Shape5({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id => columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdDate => columnsByName['created_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get modifiedDate => columnsByName['modified_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get deletedDate => columnsByName['deleted_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get title => columnsByName['title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get description => columnsByName['description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get priority => columnsByName['priority']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get plannedDate => columnsByName['planned_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get deadlineDate => columnsByName['deadline_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get estimatedTime => columnsByName['estimated_time']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get elapsedTime => columnsByName['elapsed_time']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get isCompleted => columnsByName['is_completed']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<String> _column_13(String aliasedName) =>
    i1.GeneratedColumn<String>('title', aliasedName, false, type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_14(String aliasedName) =>
    i1.GeneratedColumn<String>('description', aliasedName, true, type: i1.DriftSqlType.string);
i1.GeneratedColumn<int> _column_15(String aliasedName) =>
    i1.GeneratedColumn<int>('priority', aliasedName, true, type: i1.DriftSqlType.int);
i1.GeneratedColumn<DateTime> _column_16(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('planned_date', aliasedName, true, type: i1.DriftSqlType.dateTime);
i1.GeneratedColumn<DateTime> _column_17(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('deadline_date', aliasedName, true, type: i1.DriftSqlType.dateTime);
i1.GeneratedColumn<int> _column_18(String aliasedName) =>
    i1.GeneratedColumn<int>('estimated_time', aliasedName, true, type: i1.DriftSqlType.int);
i1.GeneratedColumn<int> _column_19(String aliasedName) =>
    i1.GeneratedColumn<int>('elapsed_time', aliasedName, true, type: i1.DriftSqlType.int);
i1.GeneratedColumn<bool> _column_20(String aliasedName) => i1.GeneratedColumn<bool>('is_completed', aliasedName, false,
    type: i1.DriftSqlType.bool,
    defaultConstraints: i1.GeneratedColumn.constraintIsAlways('CHECK ("is_completed" IN (0, 1))'),
    defaultValue: const CustomExpression('0'));

class Shape6 extends i0.VersionedTable {
  Shape6({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id => columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdDate => columnsByName['created_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get modifiedDate => columnsByName['modified_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get deletedDate => columnsByName['deleted_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get taskId => columnsByName['task_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get tagId => columnsByName['tag_id']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_21(String aliasedName) =>
    i1.GeneratedColumn<String>('task_id', aliasedName, false, type: i1.DriftSqlType.string);

class Shape7 extends i0.VersionedTable {
  Shape7({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id => columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdDate => columnsByName['created_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get modifiedDate => columnsByName['modified_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get deletedDate => columnsByName['deleted_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get name => columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get color => columnsByName['color']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get isArchived => columnsByName['is_archived']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<bool> _column_22(String aliasedName) => i1.GeneratedColumn<bool>('is_archived', aliasedName, false,
    type: i1.DriftSqlType.bool,
    defaultConstraints: i1.GeneratedColumn.constraintIsAlways('CHECK ("is_archived" IN (0, 1))'),
    defaultValue: const CustomExpression('0'));

class Shape8 extends i0.VersionedTable {
  Shape8({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id => columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdDate => columnsByName['created_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get modifiedDate => columnsByName['modified_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get deletedDate => columnsByName['deleted_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get primaryTagId => columnsByName['primary_tag_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get secondaryTagId => columnsByName['secondary_tag_id']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_23(String aliasedName) =>
    i1.GeneratedColumn<String>('primary_tag_id', aliasedName, false, type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_24(String aliasedName) =>
    i1.GeneratedColumn<String>('secondary_tag_id', aliasedName, false, type: i1.DriftSqlType.string);

class Shape9 extends i0.VersionedTable {
  Shape9({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id => columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdDate => columnsByName['created_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get modifiedDate => columnsByName['modified_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get deletedDate => columnsByName['deleted_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get key => columnsByName['key']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get value => columnsByName['value']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get valueType => columnsByName['value_type']! as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<String> _column_25(String aliasedName) =>
    i1.GeneratedColumn<String>('key', aliasedName, false, type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_26(String aliasedName) =>
    i1.GeneratedColumn<String>('value', aliasedName, false, type: i1.DriftSqlType.string);
i1.GeneratedColumn<int> _column_27(String aliasedName) =>
    i1.GeneratedColumn<int>('value_type', aliasedName, false, type: i1.DriftSqlType.int);

class Shape10 extends i0.VersionedTable {
  Shape10({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id => columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdDate => columnsByName['created_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get modifiedDate => columnsByName['modified_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get deletedDate => columnsByName['deleted_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get fromIp => columnsByName['from_ip']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get toIp => columnsByName['to_ip']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name => columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncDate => columnsByName['last_sync_date']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<String> _column_28(String aliasedName) =>
    i1.GeneratedColumn<String>('from_ip', aliasedName, false, type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_29(String aliasedName) =>
    i1.GeneratedColumn<String>('to_ip', aliasedName, false, type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_30(String aliasedName) =>
    i1.GeneratedColumn<String>('name', aliasedName, true, type: i1.DriftSqlType.string);
i1.GeneratedColumn<DateTime> _column_31(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('last_sync_date', aliasedName, true, type: i1.DriftSqlType.dateTime);

final class Schema3 extends i0.VersionedSchema {
  Schema3({required super.database}) : super(version: 3);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    appUsageTable,
    appUsageTagTable,
    habitTable,
    habitTagTable,
    habitRecordTable,
    taskTable,
    taskTagTable,
    tagTable,
    tagTagTable,
    taskTimeRecordTable,
    settingTable,
    syncDeviceTable,
  ];
  late final Shape0 appUsageTable = Shape0(
      source: i0.VersionedTable(
        entityName: 'app_usage_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 appUsageTagTable = Shape1(
      source: i0.VersionedTable(
        entityName: 'app_usage_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_8,
          _column_9,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 habitTable = Shape2(
      source: i0.VersionedTable(
        entityName: 'habit_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_10,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 habitTagTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'habit_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_9,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 habitRecordTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'habit_record_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_12,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape11 taskTable = Shape11(
      source: i0.VersionedTable(
        entityName: 'task_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_13,
          _column_14,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_20,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 taskTagTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'task_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_21,
          _column_9,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 tagTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_6,
          _column_22,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 tagTagTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'tag_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_23,
          _column_24,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape12 taskTimeRecordTable = Shape12(
      source: i0.VersionedTable(
        entityName: 'task_time_record_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_21,
          _column_7,
          _column_1,
          _column_2,
          _column_3,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 settingTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'setting_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_25,
          _column_26,
          _column_27,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape10 syncDeviceTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'sync_device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape11 extends i0.VersionedTable {
  Shape11({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id => columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdDate => columnsByName['created_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get modifiedDate => columnsByName['modified_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get deletedDate => columnsByName['deleted_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get title => columnsByName['title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get description => columnsByName['description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get priority => columnsByName['priority']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get plannedDate => columnsByName['planned_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get deadlineDate => columnsByName['deadline_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get estimatedTime => columnsByName['estimated_time']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get isCompleted => columnsByName['is_completed']! as i1.GeneratedColumn<bool>;
}

class Shape12 extends i0.VersionedTable {
  Shape12({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id => columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get taskId => columnsByName['task_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get duration => columnsByName['duration']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get createdDate => columnsByName['created_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get modifiedDate => columnsByName['modified_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get deletedDate => columnsByName['deleted_date']! as i1.GeneratedColumn<DateTime>;
}

final class Schema4 extends i0.VersionedSchema {
  Schema4({required super.database}) : super(version: 4);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    appUsageTable,
    appUsageTagTable,
    appUsageTimeRecordTable,
    habitTable,
    habitTagTable,
    habitRecordTable,
    taskTable,
    taskTagTable,
    tagTable,
    tagTagTable,
    taskTimeRecordTable,
    settingTable,
    syncDeviceTable,
  ];
  late final Shape13 appUsageTable = Shape13(
      source: i0.VersionedTable(
        entityName: 'app_usage_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 appUsageTagTable = Shape1(
      source: i0.VersionedTable(
        entityName: 'app_usage_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_8,
          _column_9,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape14 appUsageTimeRecordTable = Shape14(
      source: i0.VersionedTable(
        entityName: 'app_usage_time_record_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_8,
          _column_7,
          _column_1,
          _column_2,
          _column_3,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 habitTable = Shape2(
      source: i0.VersionedTable(
        entityName: 'habit_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_10,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 habitTagTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'habit_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_9,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 habitRecordTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'habit_record_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_12,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape11 taskTable = Shape11(
      source: i0.VersionedTable(
        entityName: 'task_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_13,
          _column_14,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_20,
          _column_1,
          _column_2,
          _column_3,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 taskTagTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'task_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_21,
          _column_9,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 tagTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_6,
          _column_22,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 tagTagTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'tag_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_23,
          _column_24,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape12 taskTimeRecordTable = Shape12(
      source: i0.VersionedTable(
        entityName: 'task_time_record_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_21,
          _column_7,
          _column_1,
          _column_2,
          _column_3,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 settingTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'setting_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_25,
          _column_26,
          _column_27,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape10 syncDeviceTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'sync_device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape13 extends i0.VersionedTable {
  Shape13({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id => columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdDate => columnsByName['created_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get modifiedDate => columnsByName['modified_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get deletedDate => columnsByName['deleted_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get name => columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get displayName => columnsByName['display_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get color => columnsByName['color']! as i1.GeneratedColumn<String>;
}

class Shape14 extends i0.VersionedTable {
  Shape14({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id => columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get appUsageId => columnsByName['app_usage_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get duration => columnsByName['duration']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get createdDate => columnsByName['created_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get modifiedDate => columnsByName['modified_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get deletedDate => columnsByName['deleted_date']! as i1.GeneratedColumn<DateTime>;
}

final class Schema5 extends i0.VersionedSchema {
  Schema5({required super.database}) : super(version: 5);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    appUsageTable,
    appUsageTagTable,
    appUsageTagRuleTable,
    appUsageTimeRecordTable,
    habitTable,
    habitTagTable,
    habitRecordTable,
    taskTable,
    taskTagTable,
    tagTable,
    tagTagTable,
    taskTimeRecordTable,
    settingTable,
    syncDeviceTable,
  ];
  late final Shape13 appUsageTable = Shape13(
      source: i0.VersionedTable(
        entityName: 'app_usage_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 appUsageTagTable = Shape1(
      source: i0.VersionedTable(
        entityName: 'app_usage_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_8,
          _column_9,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape15 appUsageTagRuleTable = Shape15(
      source: i0.VersionedTable(
        entityName: 'app_usage_tag_rule_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_32,
          _column_9,
          _column_33,
          _column_14,
          _column_1,
          _column_2,
          _column_3,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape14 appUsageTimeRecordTable = Shape14(
      source: i0.VersionedTable(
        entityName: 'app_usage_time_record_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_8,
          _column_7,
          _column_1,
          _column_2,
          _column_3,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 habitTable = Shape2(
      source: i0.VersionedTable(
        entityName: 'habit_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_10,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 habitTagTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'habit_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_9,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 habitRecordTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'habit_record_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_12,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape11 taskTable = Shape11(
      source: i0.VersionedTable(
        entityName: 'task_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_13,
          _column_14,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_20,
          _column_1,
          _column_2,
          _column_3,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 taskTagTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'task_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_21,
          _column_9,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 tagTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_6,
          _column_22,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 tagTagTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'tag_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_23,
          _column_24,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape12 taskTimeRecordTable = Shape12(
      source: i0.VersionedTable(
        entityName: 'task_time_record_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_21,
          _column_7,
          _column_1,
          _column_2,
          _column_3,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 settingTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'setting_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_25,
          _column_26,
          _column_27,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape10 syncDeviceTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'sync_device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape15 extends i0.VersionedTable {
  Shape15({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id => columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get pattern => columnsByName['pattern']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get tagId => columnsByName['tag_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get isActive => columnsByName['is_active']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get description => columnsByName['description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdDate => columnsByName['created_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get modifiedDate => columnsByName['modified_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get deletedDate => columnsByName['deleted_date']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<String> _column_32(String aliasedName) =>
    i1.GeneratedColumn<String>('pattern', aliasedName, false, type: i1.DriftSqlType.string);
i1.GeneratedColumn<bool> _column_33(String aliasedName) => i1.GeneratedColumn<bool>('is_active', aliasedName, false,
    type: i1.DriftSqlType.bool,
    defaultConstraints: i1.GeneratedColumn.constraintIsAlways('CHECK ("is_active" IN (0, 1))'),
    defaultValue: const CustomExpression('1'));

final class Schema6 extends i0.VersionedSchema {
  Schema6({required super.database}) : super(version: 6);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    appUsageTable,
    appUsageTagTable,
    appUsageTagRuleTable,
    appUsageTimeRecordTable,
    habitTable,
    habitTagTable,
    habitRecordTable,
    taskTable,
    taskTagTable,
    tagTable,
    tagTagTable,
    taskTimeRecordTable,
    settingTable,
    syncDeviceTable,
  ];
  late final Shape16 appUsageTable = Shape16(
      source: i0.VersionedTable(
        entityName: 'app_usage_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_34,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 appUsageTagTable = Shape1(
      source: i0.VersionedTable(
        entityName: 'app_usage_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_8,
          _column_9,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape15 appUsageTagRuleTable = Shape15(
      source: i0.VersionedTable(
        entityName: 'app_usage_tag_rule_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_32,
          _column_9,
          _column_33,
          _column_14,
          _column_1,
          _column_2,
          _column_3,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape14 appUsageTimeRecordTable = Shape14(
      source: i0.VersionedTable(
        entityName: 'app_usage_time_record_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_8,
          _column_7,
          _column_1,
          _column_2,
          _column_3,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 habitTable = Shape2(
      source: i0.VersionedTable(
        entityName: 'habit_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_10,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 habitTagTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'habit_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_9,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 habitRecordTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'habit_record_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_12,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape11 taskTable = Shape11(
      source: i0.VersionedTable(
        entityName: 'task_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_13,
          _column_14,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_20,
          _column_1,
          _column_2,
          _column_3,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 taskTagTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'task_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_21,
          _column_9,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 tagTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_6,
          _column_22,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 tagTagTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'tag_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_23,
          _column_24,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape12 taskTimeRecordTable = Shape12(
      source: i0.VersionedTable(
        entityName: 'task_time_record_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_21,
          _column_7,
          _column_1,
          _column_2,
          _column_3,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 settingTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'setting_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_25,
          _column_26,
          _column_27,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape10 syncDeviceTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'sync_device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape16 extends i0.VersionedTable {
  Shape16({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id => columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdDate => columnsByName['created_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get modifiedDate => columnsByName['modified_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get deletedDate => columnsByName['deleted_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get name => columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get displayName => columnsByName['display_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get color => columnsByName['color']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get deviceName => columnsByName['device_name']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_34(String aliasedName) =>
    i1.GeneratedColumn<String>('device_name', aliasedName, true, type: i1.DriftSqlType.string);

final class Schema7 extends i0.VersionedSchema {
  Schema7({required super.database}) : super(version: 7);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    appUsageTable,
    appUsageTagTable,
    appUsageTagRuleTable,
    appUsageTimeRecordTable,
    habitTable,
    habitTagTable,
    habitRecordTable,
    taskTable,
    taskTagTable,
    tagTable,
    tagTagTable,
    taskTimeRecordTable,
    settingTable,
    syncDeviceTable,
  ];
  late final Shape16 appUsageTable = Shape16(
      source: i0.VersionedTable(
        entityName: 'app_usage_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_34,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 appUsageTagTable = Shape1(
      source: i0.VersionedTable(
        entityName: 'app_usage_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_8,
          _column_9,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape15 appUsageTagRuleTable = Shape15(
      source: i0.VersionedTable(
        entityName: 'app_usage_tag_rule_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_32,
          _column_9,
          _column_33,
          _column_14,
          _column_1,
          _column_2,
          _column_3,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape14 appUsageTimeRecordTable = Shape14(
      source: i0.VersionedTable(
        entityName: 'app_usage_time_record_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_8,
          _column_7,
          _column_1,
          _column_2,
          _column_3,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 habitTable = Shape17(
      source: i0.VersionedTable(
        entityName: 'habit_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_10,
          _column_18,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 habitTagTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'habit_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_9,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 habitRecordTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'habit_record_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_12,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape11 taskTable = Shape11(
      source: i0.VersionedTable(
        entityName: 'task_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_13,
          _column_14,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_20,
          _column_1,
          _column_2,
          _column_3,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 taskTagTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'task_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_21,
          _column_9,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 tagTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_6,
          _column_22,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 tagTagTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'tag_tag_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_23,
          _column_24,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape12 taskTimeRecordTable = Shape12(
      source: i0.VersionedTable(
        entityName: 'task_time_record_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_21,
          _column_7,
          _column_1,
          _column_2,
          _column_3,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 settingTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'setting_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_25,
          _column_26,
          _column_27,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape10 syncDeviceTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'sync_device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape17 extends i0.VersionedTable {
  Shape17({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id => columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdDate => columnsByName['created_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get modifiedDate => columnsByName['modified_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get deletedDate => columnsByName['deleted_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get name => columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get description => columnsByName['description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get estimatedTime => columnsByName['estimated_time']! as i1.GeneratedColumn<int>;
}

i0.MigrationStepWithVersion migrationSteps({
  required Future<void> Function(i1.Migrator m, Schema2 schema) from1To2,
  required Future<void> Function(i1.Migrator m, Schema3 schema) from2To3,
  required Future<void> Function(i1.Migrator m, Schema4 schema) from3To4,
  required Future<void> Function(i1.Migrator m, Schema5 schema) from4To5,
  required Future<void> Function(i1.Migrator m, Schema6 schema) from5To6,
  required Future<void> Function(i1.Migrator m, Schema7 schema) from6To7,
}) {
  return (currentVersion, database) async {
    switch (currentVersion) {
      case 1:
        final schema = Schema2(database: database);
        final migrator = i1.Migrator(database, schema);
        await from1To2(migrator, schema);
        return 2;
      case 2:
        final schema = Schema3(database: database);
        final migrator = i1.Migrator(database, schema);
        await from2To3(migrator, schema);
        return 3;
      case 3:
        final schema = Schema4(database: database);
        final migrator = i1.Migrator(database, schema);
        await from3To4(migrator, schema);
        return 4;
      case 4:
        final schema = Schema5(database: database);
        final migrator = i1.Migrator(database, schema);
        await from4To5(migrator, schema);
        return 5;
      case 5:
        final schema = Schema6(database: database);
        final migrator = i1.Migrator(database, schema);
        await from5To6(migrator, schema);
        return 6;
      case 6:
        final schema = Schema7(database: database);
        final migrator = i1.Migrator(database, schema);
        await from6To7(migrator, schema);
        return 7;
      default:
        throw ArgumentError.value('Unknown migration from $currentVersion');
    }
  };
}

i1.OnUpgrade stepByStep({
  required Future<void> Function(i1.Migrator m, Schema2 schema) from1To2,
  required Future<void> Function(i1.Migrator m, Schema3 schema) from2To3,
  required Future<void> Function(i1.Migrator m, Schema4 schema) from3To4,
  required Future<void> Function(i1.Migrator m, Schema5 schema) from4To5,
  required Future<void> Function(i1.Migrator m, Schema6 schema) from5To6,
  required Future<void> Function(i1.Migrator m, Schema7 schema) from6To7,
}) =>
    i0.VersionedSchema.stepByStepHelper(
        step: migrationSteps(
      from1To2: from1To2,
      from2To3: from2To3,
      from3To4: from3To4,
      from4To5: from4To5,
      from5To6: from5To6,
      from6To7: from6To7,
    ));
